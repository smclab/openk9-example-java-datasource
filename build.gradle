/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.7/samples
 */

buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "biz.aQute.bnd:biz.aQute.bnd.gradle:5.2.0"
		classpath 'net.saliman:gradle-properties-plugin:1.5.1'
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.1.1"
	}
}

apply plugin: 'net.saliman.properties'
apply plugin: 'org.sonarqube'

subprojects {
	def bnd = file("$projectDir/bnd.bnd");
	if (!bnd.exists()) {
		return;
	}

	apply plugin: 'java'
	apply plugin: 'biz.aQute.bnd.builder'

	repositories {
		mavenLocal()
		mavenCentral()
	}

	def karafDir = properties.get("karafDir", "karaf")

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	dependencies {

		// BOM

		compile platform('io.projectreactor:reactor-bom:2020.0.2')
		compile platform('io.r2dbc:r2dbc-bom:Arabba-SR8')
		compile platform('io.micrometer:micrometer-bom:1.6.2')
		compile platform('com.fasterxml.jackson:jackson-bom:2.11.3')

		compile group: 'org.reactivestreams', name: 'reactive-streams'
		compile group: 'io.projectreactor', name: 'reactor-core'
		compile group: 'io.projectreactor.addons', name: 'reactor-extra'

		compile group: 'org.osgi', name: 'osgi.core', version: '6.0.0'
		compile group: 'org.osgi', name: 'org.osgi.service.component.annotations', version: '1.3.0'

		compile "io.projectreactor.rabbitmq:reactor-rabbitmq"

		compile group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "5.2.0"
		compile group: 'org.osgi', name: 'org.osgi.service.log', version: '1.3.0'
		compile group: 'org.osgi', name: 'org.osgi.service.cm', version: '1.6.0'

		compile group: 'io.vavr', name: 'vavr', version: '0.10.3'

		compile group: 'io.r2dbc', name: 'r2dbc-spi'

		compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

		compileOnly 'org.projectlombok:lombok:1.18.16'
		annotationProcessor 'org.projectlombok:lombok:1.18.16'

		compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor'
		compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml'
		compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-smile'
		compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
		compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
		compile group: 'com.fasterxml.jackson.core', name: 'jackson-core'
		compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-jsonSchema'

		compile group: 'io.micrometer', name: 'micrometer-core'

		compile group: 'com.hazelcast', name: 'hazelcast', version: '4.1'

		compile group: 'io.r2dbc', name: 'r2dbc-proxy'

	}

	task buildBundleDir(type: Copy) {
		dependsOn(jar)
		from(zipTree(tasks.jar.outputs.files.singleFile))
		into "$buildDir/bundleDir"
	}

	if (properties.get("karafDir") != null) {
		task deploy(type: Copy) {
			dependsOn(jar)
			from(tasks.jar.outputs.files.singleFile)

			into "$karafDir/deploy"
		}
	}

}

apply from: "build-dist.gradle"

def allDependencies = configurations
		.findAll({it.name.startsWith("dist")})
		.collect({ it.dependencies})
		.flatten()

def conf = configurations.create("tmp")

conf.dependencies.addAll(allDependencies)

task buildDist(type: Copy) {
	from(conf)
	into "$rootDir/build/libs"
}

if (properties.get("karafDir") != null) {
	task deployDist(type: Copy) {
		from(conf)
		into "$karafDir/deploy"
	}
}
task cleanDist(type: Delete) {
	delete("$rootDir/build")
}

clean.dependsOn(cleanDist)